---
// GoogleAd Component
// ------------
// Description: A flexible Google AdSense component that supports vertical and horizontal layouts

import { configData } from '../../config/config'

interface Props {
    format?: 'auto' | 'fluid' | 'rectangle' | 'vertical' | 'horizontal'
    layout?: 'vertical' | 'horizontal'
    responsive?: boolean
    classes?: string
}

const {
    format = 'auto',
    layout = 'horizontal',
    responsive = true,
    classes
} = Astro.props

// Get ad configuration
const { ads } = configData
const client = ads.client
const slot = ads.slots[layout] || ads.slots.horizontal

// Define ad sizes based on layout
const adSizes = {
    horizontal: {
        width: '728',
        height: '90'
    },
    vertical: {
        width: '160',
        height: '600'
    },
    rectangle: {
        width: '300',
        height: '250'
    }
}

const currentSize = format === 'auto' ? adSizes[layout] : adSizes[format] || adSizes.horizontal
if (format === 'fluid')
---

<div 
    class:list={[
        'google-ad',
        `google-ad--${layout}`,
        { 'google-ad--responsive': responsive },
        classes
    ]}
>
    {import.meta.env.PROD ? (
        <ins
            class="adsbygoogle"
            style={`display:block; ${responsive ? '' : `width:${currentSize.width}px; height:${currentSize.height}px;`}`}
            data-ad-client={client}
            data-ad-slot={slot}
            data-ad-format={format}
            data-full-width-responsive={responsive ? 'true' : 'false'}
        />
        <script is:inline>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    ) : (
        <div 
            class="ad-placeholder"
            style={`width:${responsive ? '100%' : currentSize.width + 'px'}; height:${currentSize.height}px;`}
        >
            <span>Advertisement</span>
            <span class="ad-details">
                {layout} - {currentSize.width}x{currentSize.height}
            </span>
        </div>
    )}
</div> 