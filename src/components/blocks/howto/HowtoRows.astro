---
import Section from '../../ui/Section.astro';
import Row from '../../ui/Row.astro';
import Col from '../../ui/Col.astro';
import TextImage from '../basic/TextImage.astro';

import HighlightData from '../../../data/json-files/howtoData.json';
import HighlightTitle from '../../../data/json-files/howtoTitle.json';

// Base path for static assets in src/assets
const basePath = '/src/assets';

// Custom function to resolve image paths
const resolveImagePath = (imagePath) => {
  return basePath + imagePath;
};

// Process the images using the custom resolver
const images = Object.fromEntries(
  HighlightData.map((highlight) => {
    const id = highlight.id;
    
    // Dynamically resolve the desktop and mobile image paths
    const desktopImage = resolveImagePath(highlight.image);
    const mobileImage = highlight.mobileImage ? resolveImagePath(highlight.mobileImage) : null;

    return [
      id,
      {
        image: desktopImage,
        mobileImage: mobileImage,
      },
    ];
  })
);
---

<Section id="highlights">
  <Row>
    <Col span="12" align="center" classes="mb-12 max-w-4xl mx-auto">
      <h2 class="text-pretty" set:html={HighlightTitle.title} />
      <p class="pb-0 text-lg">{HighlightTitle.subtitle}</p>
    </Col>
  </Row>

  {HighlightData.map((highlight, key) => {
    const { image, mobileImage } = images[highlight.id] || {};

    return (
      <TextImage
        id={`highlight-${key}`}
        title={highlight.title}
        alttext={highlight.alttext}
        text={highlight.text}
        image={image} 
        mobileImage={mobileImage} 
        imageWidth={highlight.imageWidth}
        imageHeight={highlight.imageHeight}
        imagePosition={highlight.imagePosition as "right" | "left"}
        classes={key === 0 ? '!pb-0' : key === HighlightData.length - 1 ? '!pt-0' : '!py-0'}
      />
    );
  })}
</Section>
