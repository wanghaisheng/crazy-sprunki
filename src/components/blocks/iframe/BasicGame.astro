---
//BasicGame.astro
// If Section, Row, and Col components don't exist, you might need to create them
// or remove them and use standard HTML elements
interface Props {
  link?: string;
  bg?: string;
  bgPosition?: 'left' | 'right' | 'center';
}

const {
  link = "https://elsolartesania.com",
  bg,
  bgPosition = 'center'
} = Astro.props;
---

<div class="game-section" style={bg ? `background-image: url(${bg}); background-position: ${bgPosition};` : ''}>
  <div class="game-container">
    <!-- Button to load the iframe -->
    <div class="start-button-container">
      <button class="start-button" id="start-button">Start Game</button>
    </div>

    <!-- Gameframe (Iframe) -->
    <div class="iframe-container">
      <iframe
        id="game-frame"
        class="gameframe hidden"
        data-src={link}
        frameborder="0"
        allow="fullscreen"
        allowfullscreen
        title="Gameframe"
      ></iframe>
      <button class="fullscreen-button hidden" id="fullscreen-button">
        Fullscreen
      </button>
    </div>
  </div>
</div>

<style>
  .game-section {
    width: 100%;
    background-size: cover;
    background-repeat: no-repeat;
  }

  .game-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .start-button-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 20px 0;
  }

  .start-button {
    background-color: #007bff;
    color: white;
    padding: 12px 24px;
    border: none;
    bottom: 50%;
    
    font-size: 18px;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s ease;
  }

  .start-button:hover {
    background-color: #0056b3;
  }

  .start-button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
  }

  .iframe-container {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
    margin-top: 20px;
  }

  .gameframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease;
  }

  .gameframe.loaded {
    opacity: 1;
  }

  .gameframe.hidden {
    display: none;
  }

  .fullscreen-button {
    position: absolute;
    bottom: 20px;
    left: 80%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.6);
    color: white;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s;
    z-index: 10;
  }

  .fullscreen-button:hover {
    background-color: rgba(0, 0, 0, 0.8);
  }

  .fullscreen-button.hidden {
    display: none;
  }

  /* Fullscreen styles */
  :fullscreen .gameframe {
    width: 100vw;
    height: 100vh;
  }
</style>

<script>
  // Wait for the page to load
  window.addEventListener('load', () => {
    const startButton = document.getElementById('start-button') as HTMLButtonElement;
    const iframe = document.getElementById('game-frame') as HTMLIFrameElement;
    const fullscreenButton = document.getElementById('fullscreen-button');

    if (!startButton || !iframe || !fullscreenButton) {
      console.error('Required elements not found');
      return;
    }

    let gameLoaded = false;

    startButton.addEventListener('click', () => {
      if (gameLoaded) return;

      const iframeSrc = iframe.getAttribute('data-src');
      if (!iframeSrc) {
        console.error('No source URL found for iframe');
        return;
      }

      // Disable the start button
      startButton.disabled = true;
      startButton.textContent = 'Loading...';

      // Set the iframe source
      iframe.src = iframeSrc;
      iframe.classList.remove('hidden');

      // Handle iframe load event
      iframe.addEventListener('load', () => {
        gameLoaded = true;
        iframe.classList.add('loaded');
        fullscreenButton.classList.remove('hidden');
        startButton.style.display = 'none';
      });

      // Handle iframe load error
      iframe.addEventListener('error', () => {
        console.error('Failed to load game');
        startButton.disabled = false;
        startButton.textContent = 'Retry';
      });
    });

    // Fullscreen functionality
    fullscreenButton.addEventListener('click', () => {
      if (!document.fullscreenElement) {
        const container = iframe.parentElement;

        if(!container){

          console.error('No not find iframe');
          return 
        }

        if ((container as HTMLElement & {webkitRequestFullscreen?: () => void}).requestFullscreen) {
          container.requestFullscreen();
        // } else if (container.webkitRequestFullscreen) {
          // container.webkitRequestFullscreen();
        // } else if (container.msRequestFullscreen) {
          // container.msRequestFullscreen();
        }
      } else {
        if (document.exitFullscreen) {
          document.exitFullscreen();
        // } else if (document.webkitExitFullscreen) {
          // document.webkitExitFullscreen();
        // } else if (document.msExitFullscreen) {
          // document.msExitFullscreen();
        }
      }
    });
  });
</script>