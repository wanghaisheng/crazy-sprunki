---
import Section from '../../ui/Section.astro';
import Row from '../../ui/Row.astro';
import Col from '../../ui/Col.astro';
import CTA from '../../ui/CTA.astro';
import Button from '../../ui/Button.astro';
import ChipNotification from '../../ui/ChipNotification.astro';
import { Image } from 'astro:assets';
import Highlight from '../../ui/Highlight.astro';
import type { ImageMetadata } from 'astro';
import { getImage } from '../../../utils/helpers';

// Define interfaces
interface ButtonData {
  text: string;
  link?: string;
}

interface BadgeData {
  path: string;
  text: string;
  highlight?: string;
  alt?: string;
}

interface CTAData {
  title: string;
  text: string;
  bg: string;
  mode?: 'dark' | 'light';
  button: ButtonData;
  badge?: BadgeData;
}

// Get props with type checking
const props = Astro.props as CTAData;

// Destructure fields with defaults
const {
  title = 'Default Title',
  text = 'Default text for CTA section.',
  bg,
  mode = 'dark',
  button,
  badge,
} = props;

// Get button data with defaults
const {
  text: buttonText = 'Click Here',
  link: buttonLink = '#'
} = button || {};

// Get badge data with defaults if badge exists
const {
  path: badgePath = '',
  text: badgeText = '',
  highlight: badgeHighlight = '',
  alt: badgeAlt = 'Badge image'
} = badge || {};

// Get images
const bgImage = getImage(bg);
const badgeImage = badgePath ? getImage(badgePath) : null;

// Check if badge data is complete
const hasBadge = badge && badgeText && badgeAlt && badgeImage;
---

<Section>
  <Row>
    <Col span="1" />
    <Col span="10">
      <CTA
        title={title}
        text={text}
        mode={mode}
        bg={bgImage}
      >
        {hasBadge && (
          <ChipNotification radius="rounded-full" classes="mb-6 box">
            <Image
              src={badgeImage.src}
              alt={badgeAlt}
              width={48}
              height={48}
              class="h-12 w-12"
              slot="button"
            />
            {badgeText}
            {badgeHighlight && (
              <Highlight classes="ml-2">{badgeHighlight}</Highlight>
            )}
          </ChipNotification>
        )}
        
        <Button
          size="lg"
          style="primary"
          link={buttonLink}
        >
          {buttonText}
        </Button>
      </CTA>
    </Col>
    <Col span="1" />
  </Row>
</Section>