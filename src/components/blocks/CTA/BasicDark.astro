---
// Basic Dark Call To Action section
// ------------
// Description: A centered call to action section with title, text, background image, optional notification and button.
// Components
// - Layout
import Section from '../../ui/Section.astro'
import Row from '../../ui/Row.astro'
import Col from '../../ui/Col.astro'
// - UI
import CTA from '../../ui/CTA.astro'
import Button from '../../ui/Button.astro'
import ChipNotification from '../../ui/ChipNotification.astro'
import { Image } from 'astro:assets'
import Highlight from '../../ui/Highlight.astro'
// Content
import CtaData from '../../../data/json-files/ctaData.json'
import ctaImage from '../../../assets/cta-dark-bg.webp'
import siteconfig from '../../../data/json-files/siteConfig.json'

// Define the structure of CtaData
interface CTAData {
  title: string;
  text: string;
  buttonText: string;
  badge?: {
    text: string;
    highlight?: string;
    alt: string;
  };
}

// Type assertion to ensure CtaData matches the interface
const typedCtaData = CtaData as CTAData;

// Only import badge if CtaData has badge property
let badge;
if (typedCtaData.badge) {
  const badgefilename = siteconfig.site.badge;
  badge = await import(`../../../assets/${badgefilename}`);
}

// Check if badge exists and has required properties
const hasBadge = typedCtaData.badge &&
                 typeof typedCtaData.badge === 'object' &&
                 'text' in typedCtaData.badge &&
                 'alt' in typedCtaData.badge;
---

<Section>
  <Row>
    <Col span="1" />
    <Col span="10">
      <CTA
        title={typedCtaData.title}
        text={typedCtaData.text}
        mode="dark"
        bg={ctaImage}
      >
        {hasBadge && badge && (
          <ChipNotification radius="rounded-full" classes="mb-6 box">
            <Image
              src={badge.default}
              alt={typedCtaData.badge!.alt}
              class="h-12 w-12"
              slot="button"
            />
            {typedCtaData.badge!.text}
            {typedCtaData.badge!.highlight && (
              <Highlight classes="ml-2">{typedCtaData.badge!.highlight}</Highlight>
            )}
          </ChipNotification>
        )}
        <Button size="lg" style="primary">
          {typedCtaData.buttonText}
        </Button>
      </CTA>
    </Col>
    <Col span="1" />
  </Row>
</Section>